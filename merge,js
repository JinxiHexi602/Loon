// merge.js
const fs = require('fs');
const https = require('https');

const urls = [
  'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple.list',
  'https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Google/Google.list'
];

function fetch(url) {
  return new Promise((resolve, reject) => {
    https.get(url, res => {
      let data = '';
      res.on('data', chunk => (data += chunk));
      res.on('end', () => resolve(data));
    }).on('error', reject);
  });
}

(async () => {
  try {
    const contents = await Promise.all(urls.map(fetch));
    const merged = contents
      .map(c => c.split('\n'))
      .flat()
      .filter(line => line.trim() && !line.trim().startsWith('#'))
      .filter((line, i, arr) => arr.indexOf(line) === i) // 去重
      .sort();

    fs.writeFileSync('./rules/merged.list', merged.join('\n'));
    console.log('Merge completed.');
  } catch (e) {
    console.error('Merge failed:', e);
    process.exit(1);
  }
})();
